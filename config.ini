[up_env]
step_init = docker-compose up -d --remove-orphans

[down_env]
step_down = docker-compose down

[failed_leader]
step_init = docker-compose up -d --remove-orphans
step_capture_cluster= cluster="`./ctl.sh endpoint status -w json`" && echo -n 'save_cluster'
step_capture_leader_pause = pause_time
step_capture_leader = leader="`echo $cluster | jq -r '.[0].Status.leader'`" && echo -n 'save_id_leader'
step_leader_name_pause = pause_time
step_leader_name = leader_name=$(./ctl.sh member list -w json | jq -r --arg id "$leader" '.members[] | select(.ID == ($id | tonumber)) | .name') && echo -n 'save_leader_name'
step_stop_leader_pause = pause_time
step_stop_leader = docker-compose stop $leader_name
step_view_table_pause = pause_time 3
step_view_table = ./ctl.sh endpoint status -w table
step_revert_pause = pause_control
step_revert = docker-compose start $leader_name
step_view_table_pause = pause_time 3
step_view_table = ./ctl.sh endpoint status -w table

[poc]
step_echo_hello = echo -n 'hello '
step_echo_world = echo -n 'world'
step_message_pause = pause_time 3
step_message_pause = pause_control

[EOF]